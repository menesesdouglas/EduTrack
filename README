# 📚 EduTrack

EduTrack é um sistema de gestão escolar em linha de comando (CLI) desenvolvido em **Python** com **SQLite** para persistência de dados. O objetivo é permitir que um administrador gerencie alunos, matérias e notas de forma simples e eficiente, utilizando operações **CRUD** (Create, Read, Update, Delete).

---

## 📖 Visão Geral

Este software foi criado para fins educacionais e demonstra como utilizar Python e SQLite para construir um sistema CRUD funcional. Ele pode ser expandido e adaptado para atender a necessidades maiores, como integração com interfaces gráficas ou sistemas web.

---

## 🛠️ Tecnologias Utilizadas

* **Linguagem:** Python 3
* **Banco de Dados:** SQLite3
* **Paradigma:** Programação Procedural
* **Execução:** Aplicação CLI (linha de comando)

---

## 🧩 Estrutura do Banco de Dados (Modelo Entidade-Relacionamento)

### **Tabela Alunos**

* `id_aluno` (INTEGER PRIMARY KEY AUTOINCREMENT)
* `nome_aluno` (TEXT NOT NULL)
* `matricula` (TEXT UNIQUE NOT NULL)
* `data_nascimento` (TEXT)
* `telefone_responsavel` (TEXT)
* `nome_responsavel` (TEXT)
* `serie` (TEXT)

### **Tabela Materias**

* `id_materia` (INTEGER PRIMARY KEY AUTOINCREMENT)
* `nome_materia` (TEXT NOT NULL)
* `codigo_materia` (TEXT UNIQUE NOT NULL)

### **Tabela Notas**

* `id_nota` (INTEGER PRIMARY KEY AUTOINCREMENT)
* `id_aluno` (INTEGER, FOREIGN KEY -> Alunos)
* `id_materia` (INTEGER, FOREIGN KEY -> Materias)
* `trimestre` (INTEGER NOT NULL, CHECK(trimestre IN (1,2,3)))
* `nota` (REAL)
* `nota_final` (REAL)
* `status_final` (TEXT)

---

## ⚙️ Funcionalidades

### 📌 **Gerenciar Alunos**

* Criar: Cadastrar um novo aluno com todos os dados necessários.
* Ler:

  * Listar todos os alunos (nome e matrícula).
  * Listar alunos por série.
  * Visualizar detalhes completos de um aluno.
* Atualizar: Editar dados de um aluno (nome, série, etc.).
* Deletar: Remover um aluno e todas as suas notas associadas.

### 📌 **Gerenciar Matérias**

* Criar: Adicionar uma nova matéria (nome e código).
* Ler: Listar todas as matérias existentes.
* Atualizar: Editar o nome ou código de uma matéria.
* Deletar: Remover uma matéria e todas as notas associadas.

### 📌 **Gerenciar Notas**

* Criar/Atualizar: Adicionar ou modificar notas de um aluno em determinado trimestre e matéria.
* Ler:

  * Gerar relatório detalhado de um aluno (notas por trimestre e matéria).
  * Calcular nota final e status (Aprovado, Reprovado ou Recuperação).
* Deletar: Remover notas (inclui remoção automática ao deletar aluno ou matéria).

---

## 📊 Regras de Negócio

* **Cálculo da Nota Final**:

  ```
  Nota_final = (Nota_1ºT + Nota_2ºT + Nota_3ºT) / 3
  ```
* **Critérios de Aprovação/Reprovação** *(valores padrão)*:

  * Aprovado: `Nota_final ≥ nota_minima_aprovacao`
  * Recuperação: `nota_maxima_reprovacao < Nota_final < nota_minima_aprovacao`
  * Reprovado: `Nota_final ≤ nota_maxima_reprovacao`

Esses limites podem ser ajustados no início do programa.

---

## 🚧 Status do Projeto

⚠️ **EduTrack está em desenvolvimento ativo.**
Atualmente, apenas parte das funcionalidades está implementada. Recursos futuros incluem gerenciamento completo de notas, cálculo automático de status final e interface de menu mais interativa.

---

## 🆕 Updates

### ✅ **Versão 0.1 (Primeira Versão)**

* Criação do banco de dados e das tabelas **Alunos**, **Materias** e **Notas**.
* Funções CRUD implementadas para **Alunos**:

  * Criar (adicionar aluno)
  * Ler (listar alunos)
  * Atualizar (editar dados de aluno)
  * Deletar (remover aluno)
* Funções iniciais para **Matérias**:

  * Criar (adicionar matéria)
  * Ler (listar matérias) *(em construção)*

---

## ▶️ Como Usar

1. Clone o repositório para sua máquina local.
2. Certifique-se de ter o **Python 3** instalado.
3. Execute o arquivo principal para criar o banco e testar as funções iniciais:

   ```
   python crud_escola.py
   ```
4. Use as funções disponíveis para cadastrar, listar, atualizar e remover alunos ou matérias.

---

## 🧠 Próximos Passos

* Finalizar as funções de gerenciamento de matérias (update e delete).
* Implementar totalmente o gerenciamento de notas.
* Adicionar cálculo de nota final e status automático.
* Criar interface de menu CLI para navegação simples.
* Documentar mais exemplos de uso.

---

## ✨ Contribuições

Contribuições são bem-vindas! Sugestões, correções e melhorias podem ser feitas via **Pull Requests** ou **Issues** no repositório.

---

## 📜 Licença

Este projeto é distribuído sob a licença MIT. Consulte o arquivo LICENSE para mais detalhes.
